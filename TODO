
Bringup: Add MicroDebug. Remove type.mk; use typeC.o for all. Remove coroutines from show.lua. Eliminate Regex and such from datx. Instead add Fold. Add MicroDisplay and MicroPierce, using indexed buffers instead of fetched buffers. Change to depth color. Get pierce point and transformation to work. Add coincidence color. Demonstrate depth and coincidence color with irregular triangles.

Builtin: Test each Transfer from planer.lua. Test modes with writes to Configure.
Mouse transformations include
 — (C) rotate around cross of pierce to clicked cursor and pierce to moved cursor,
 — (N) cross of pierce to normal through picture and pierce to normal through picture moved by same delta as cursor,
 — (O) cross between pierce to ortho through picture and pierce to ortho through picture moved by same delta as cursor,
 — (T) translate parallel to picture,
 — (P) parallel to pierced plane.
Roller transformations include
 — (R) rotate around moved leg of cross,
 — (Z) translate perpendicular to picture,
 — (Q) perpendicular to pierced plane,
 — (F) resize with pierce fixed.
Click actions include
 — (A) add facet,
 — (S) subtract facet,
 — (B) random boundary through point,
 — (M) send pierce point as metric,
 — (W) warp to last metric sent.

Release: Write plane.lua that starts share, file, space, plane.

Suite: In plane.lua, share, file, space, plane, side to manipulate polytopes. In space.lua, share, file, space, plane, to display tetrahedron overlaps as they are found and optimized. In line.lua, share, file, space, plane, line, side, to decorate polytopes with sound. In point.lua, share, file, space, plane, line, side, frame, to decorate facets with little language for textures, sound, frames, text, graffiti, permissions, wormholes, transparency. Share connects processes by pipe. Side displays and edits fields in file. Frame displays and edits video and interfaces to hdmi over usbc. 

Name: Higher dimensional spaces are simpler than lower. They teach real analysis with blobs of various sort, like open covering compact and so on, because blobs are easier to understand than numbers. Topology is cool and all, but there is not as much to it as there is to real or even complex numbers. The beauty of two dimensional complex analysis is that complex numbers are simpler than real numbers. What is harder to understand than one dimensional real numbers? The relation or interface of math to reality is zero dimensional and harder to understand than either in isolation. But that’s just metaphysics, so who cares? I just think it’s neat.